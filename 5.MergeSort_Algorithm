//5.Mergesort Algorithm
//COde is written in C
//Just copy the paste the code

#include <stdio.h>
void Merge(int a[], int size_a, int b[], int size_b, int c[]) {
    int idx1 = 0, idx2 = 0;
    int idx = 0;

    while (idx1 < size_a && idx2 < size_b) {
        if (a[idx1] < b[idx2]) {
            c[idx++] = a[idx1++];
            
        } else {
            c[idx++] = b[idx2++];
        }
    }

    while (idx1 < size_a) {
        c[idx++] = a[idx1++];
        
    }

    while (idx2 < size_b) {
        c[idx++] = a[idx2++];
    }
}

void Sort(int a[],int size_a) {

    
    if (size_a == 1) {
        return;
    }
    
    int mid = (0+size_a)/2;

    int sz1 = mid;
    int sz2 = size_a-mid;

    int a1[sz1];
    int a2[sz2];
    
    for (int i = 0; i < mid; i++) {
        a1[i] = a[i];
    }

    for (int i = mid; i < size_a; i++) {
        a2[i] = a[i];
    }

    Sort(a1,sz1); 
    Sort(a2,sz2);

    Merge(a1,sz1,a2,sz2,a);
}

int main() {
    int n;
    cin >> n;

    int a[n];
    for(int i = 0; i < n; i++) {
        cin >> a[i];
    }

    Sort(a,n);

    for(int i = 0; i < n; i++) {
        cout << a[i] << " ";
    }
    cout << "\n";

    return 0;
}
